<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Product List</title>
    <meta name="color-scheme" content="dark">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css">
</head>
<body>
    <h2 class="section make-it-left make-it-white-back make-it-dark make-it-rounded-top make-it-normal">Products</h2>

    <!-- Pagination Controls -->
    <section class="section">
        <div class="rt-general-page-footer make-it-semi-back is-centered grid-container-3c-by-1r-special" role="navigation" aria-label="pagination">
            <a class="button section make-it-small" 
                href="?page={{prevPage}}&limit={{limit}}&sort={{sort}}&sortOrder={{sortOrder}}" 
                {{#if (eq currentPage 1)}}disabled{{/if}}>Prev</a>

            <div class="make-it-dark small-section make-it-small make-it-center">
                Page {{currentPage}} of {{totalPages}}
            </div>

            <a class="button section make-it-small" 
                href="?page={{nextPage}}&limit={{limit}}&sort={{sort}}&sortOrder={{sortOrder}}" 
                {{#if (eq currentPage totalPages)}}disabled{{/if}}>Next</a>
        </div>

        <!-- Limit selector -->
        <div class="field has-addons make-it-center small-section">
            <div class="control">
                <div class="select is-small">
                    <select id="limit-select">
                        <option value="6" {{#if (eq limit 6)}}selected{{/if}}>6 per page</option>
                        <option value="12" {{#if (eq limit 12)}}selected{{/if}}>12 per page</option>
                        <option value="24" {{#if (eq limit 24)}}selected{{/if}}>24 per page</option>
                        <option value="48" {{#if (eq limit 48)}}selected{{/if}}>48 per page</option>
                    </select>
                </div>
            </div>
            <div class="control">
                <button class="button is-small" onclick="applyLimit()">Apply</button>
            </div>
        </div>
    </section>

    <!-- Product Cards -->
    <section class="section">
        <div>
            <div class="columns is-multiline is-centered">
                {{#if products.length}}
                    {{#each products}}
                        <div class="column is-12-mobile is-4-desktop">
                            <div class="card-title-container make-it-dark-back make-it-left make-it-white">
                                <div>{{this.title}}</div>
                            </div>
                            <div class="make-it-semi-back make-it-center">
                                <div class="small-section">
                                    <div class="card-category-badge-prebuilt make-it-left">{{this.category}}</div>
                                    <br>
                                    <a href="/products/{{this._id}}" class="make-it-center">
                                        <img class="small-section make-it-square-image" src="{{this.imageURL}}" alt="{{this.title}}">
                                    </a>
                                    <div class="columns make-it-white-back make-it-dark make-it-small small-section">
                                        <div class="column is-6 make-it-left">
                                            <p><b>Price:</b> ${{this.price}}</p>
                                            <p><b>Stock:</b> {{this.stock}}</p>
                                            <p><b>Pieces:</b> {{this.pieces}}</p>
                                            <p><b>Code:</b> {{this.code}}</p>
                                        </div>
                                    </div>
                                    <div class="columns make-it-center small-section make-it-100percent-wide">
                                        <div class="column is-12">
                                            <button 
                                                class="button make-it-100percent-wide is-small is-success make-it-small add-to-cart-btn make-it-dark" 
                                                data-product='{{{stringify this}}}'>
                                                Add to cart
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {{/each}}
                {{else}}
                    <p class="has-text-centered make-it-white section">No products found in the database.</p>
                {{/if}}
            </div>
        </div>
    </section>

    <!-- Scripts -->
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script src="/js/showToast.js"></script>

    <script>
        function incrementCartCount(amount = 1) {
            const cartCountElement = document.getElementById("cart-count");
            if (!cartCountElement) return;
            const current = parseInt(cartCountElement.textContent) || 0;
            cartCountElement.textContent = current + amount;
        }

        function applyLimit() {
            const selectedLimit = document.getElementById('limit-select').value;
            const urlParams = new URLSearchParams(window.location.search);
            urlParams.set('limit', selectedLimit);
            urlParams.set('page', 1); // reset to first page
            window.location.search = urlParams.toString();
        }

        document.addEventListener("DOMContentLoaded", () => {
            const isLoggedIn = !!localStorage.getItem("token");
            const user = JSON.parse(localStorage.getItem("user") || "{}");
            const userCartId = user.cartId || null;

            document.querySelectorAll(".add-to-cart-btn").forEach((button) => {
                button.addEventListener("click", async () => {
                    const product = JSON.parse(button.getAttribute("data-product"));

                    if (isLoggedIn && userCartId) {
                        try {
                            const token = localStorage.getItem("token");
                            const response = await fetch(`/api/carts/${userCartId}/product/${product._id}`, {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json",
                                    Authorization: `Bearer ${token}`
                                },
                                body: JSON.stringify({ quantity: 1 })
                            });

                            const result = await response.json();

                            if (response.ok) {
                                if (result.token) {
                                    localStorage.setItem("token", result.token); // rolling token
                                }
                                showToast(`${product.title} added to cart`);
                                incrementCartCount(1);
                            } else {
                                showToast(`Failed to add to cart: ${result.message}`, false);
                            }
                        } catch (err) {
                            console.error(err);
                            showToast("Error adding product to cart", false);
                        }
                    } else {
                        let guestCart = JSON.parse(localStorage.getItem("guestCart") || "[]");
                        const existing = guestCart.find(item => item.pid === product._id);

                        if (existing) {
                            existing.quantity += 1;
                        } else {
                            guestCart.push({
                                pid: product._id,
                                title: product.title,
                                price: product.price,
                                quantity: 1
                            });
                        }

                        localStorage.setItem("guestCart", JSON.stringify(guestCart));
                        showToast(`${product.title} added to guest cart`);
                        incrementCartCount(1);
                    }
                });
            });
        });
    </script>
</body>
</html>
