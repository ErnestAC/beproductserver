<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Product List</title>
    <meta name="color-scheme" content="dark">
</head>
<body>
    <h2 class="section make-it-left make-it-white-back make-it-dark make-it-rounded-top make-it-normal">Products</h2>

    <script>
        const isLoggedIn = {{#if user}}true{{else}}false{{/if}};
        const userCartId = {{#if user}}"{{user.cartId}}"{{else}}null{{/if}};
    </script>

    <section class="">
        <div class="rt-general-page-footer make-it-semi-back is-centered grid-container-3c-by-1r-special" role="navigation" aria-label="pagination">
            <div class="make-it-center make-it-100percent-wide">
                <a class="navbar-item make-it-rounded make-it-small" 
                    href="?page={{prevPage}}&limit={{limit}}&sort={{sort}}&sortOrder={{sortOrder}}" 
                    {{#if (eq currentPage 1)}}disabled{{/if}}>Prev
                </a>
            </div>
            <div class="make-it-dark small-section make-it-small make-it-center">
                Page {{currentPage}} of {{totalPages}}
            </div>
            <div class="make-it-center make-it-100percent-wide">
                <a class="navbar-item make-it-rounded make-it-small" 
                    href="?page={{nextPage}}&limit={{limit}}&sort={{sort}}&sortOrder={{sortOrder}}" 
                    {{#if (eq currentPage totalPages)}}disabled{{/if}}>Next
                </a>
            </div>
        </div>
    </section>

    <section class="section">
        <div>
            <div class="columns is-multiline is-centered">
                {{#if products.length}}
                    {{#each products}}
                        <div class="column is-12-mobile is-3-desktop">
                            <div class="card-title-container make-it-dark-back make-it-left make-it-white">
                                <div>{{this.title}}</div>
                            </div>
                            <div class="make-it-semi-back make-it-center">
                                <div class="small-section">
                                    <div class="card-category-badge-prebuilt make-it-left">
                                        {{this.category}}
                                    </div>
                                    <br>
                                    <a href="/products/{{this.pid}}" class="make-it-center">
                                        <img class="small-section make-it-square-image" src="{{this.imageURL}}" alt="{{this.title}}">
                                    </a>

                                    <div class="columns make-it-white-back make-it-dark make-it-small small-section">
                                        <div class="column is-6 make-it-left">
                                            <p><b>Price:</b> ${{this.price}}</p>
                                            <p><b>Stock:</b> {{this.stock}}</p>
                                            <p><b>Pieces:</b> {{this.pieces}}</p>
                                            <p><b>Code:</b> {{this.code}}</p>
                                        </div>
                                        <div class="column is-6 make-it-left">
                                            <p><b>Motor:</b> {{#if this.motorizable}}Yes{{else}}No{{/if}}</p>
                                            <p><b>Lights:</b> {{#if this.lighting}}Yes{{else}}No{{/if}}</p>
                                        </div>
                                    </div>
                                    <div class="columns make-it-center small-section make-it-100percent-wide">
                                        <div class="column is-12">
                                            <button 
                                                class="button make-it-100percent-wide is-small is-success make-it-normal add-to-cart-btn make-it-dark" 
                                                data-product='{{{stringify this}}}'>
                                                Add to cart
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {{/each}}
                {{else}}
                    <p class="has-text-centered make-it-white section">No products found in the database.</p>
                {{/if}}
            </div>
        </div>
    </section>

    <!-- Toastify JS -->
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script src="/js/showToast.js"></script>

    <script>
        function incrementCartCount(amount = 1) {
            const cartCountElement = document.getElementById("cart-count");
            if (!cartCountElement) return;
            const current = parseInt(cartCountElement.textContent) || 0;
            cartCountElement.textContent = current + amount;
        }

        function applyLimit() {
            const selectedLimit = document.getElementById('limit-select').value;
            const urlParams = new URLSearchParams(window.location.search);
            urlParams.set('limit', selectedLimit);
            urlParams.set('page', 1);
            window.location.search = urlParams.toString();
        }

        document.querySelectorAll(".add-to-cart-btn").forEach((button) => {
            button.addEventListener("click", async () => {
                const product = JSON.parse(button.getAttribute("data-product"));

                if (isLoggedIn && userCartId) {
                    try {
                        const token = localStorage.getItem("token");
                        const response = await fetch(`/api/carts/${userCartId}/product/${product.pid}`, {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                                Authorization: `Bearer ${token}`
                            },
                            body: JSON.stringify({ quantity: 1 })
                        });

                        const result = await response.json();

                        if (response.ok) {
                            if (result.token) {
                                localStorage.setItem("token", result.token); // ðŸ”¥ Save new refreshed token
                            }
                            showToast(`${product.title} added to cart`);
                            incrementCartCount(1);
                        } else {
                            showToast(`Failed to add to cart: ${result.message}`, false);
                        }
                    } catch (err) {
                        showToast("Error adding product to cart", false);
                        console.error(err);
                    }
                } else {
                    let cart = JSON.parse(localStorage.getItem("guestCart") || "[]");
                    const existing = cart.find(item => item.pid === product.pid);

                    if (existing) {
                        existing.quantity += 1;
                    } else {
                        cart.push({
                            pid: product.pid,
                            title: product.title,
                            price: product.price,
                            quantity: 1
                        });
                    }

                    localStorage.setItem("guestCart", JSON.stringify(cart));
                    showToast(`${product.title} added to guest cart`);
                    incrementCartCount(1);
                }
            });
        });
    </script>
</body>
</html>
