<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Real-Time Products</title>
    <meta name="color-scheme" content="dark" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css" />
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        let currentPage = 1;
        let totalItems = 0;
        let itemsPerPage = 10;
        let totalPages = 1;

        socket.on('updateProducts', (products) => {
            totalItems = products.length;
            totalPages = Math.ceil(totalItems / itemsPerPage);

            const productList = document.getElementById('productList');
            const productCount = document.getElementById('productCount');
            
            const start = (currentPage - 1) * itemsPerPage;
            const end = start + itemsPerPage;
            const paginatedProducts = products.slice(start, end);

            productList.innerHTML = `
                <table class="table is-striped is-hoverable is-fullwidth make-it-rounded-top make-it-semi-back make-it-small">
                    <thead>
                        <tr>
                            <th></th>
                            <th>PID</th>
                            <th>Title</th>
                            <th>Price</th>
                            <th>Stock</th>
                            <th>Motor</th>
                            <th>Lights</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${paginatedProducts.map(product => `
                            <tr>
                                <td class="make-it-center">
                                    <img src="${product.imageURL || '/static/default.png'}" width="28px" alt="${product.title}" />
                                </td>
                                <td>${product.pid}</td>
                                <td>${product.title}</td>
                                <td>$${product.price}</td>
                                <td>${product.stock}</td>
                                <td>${product.motorizable ? "Yes" : "No"}</td>
                                <td>${product.lighting ? "Yes" : "No"}</td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            `;

            productCount.textContent = `Displaying ${paginatedProducts.length} product(s) | Page ${currentPage}`;
        });

        function changePage(step) {
            currentPage += step;
            if (currentPage < 1) currentPage = 1;
            if (currentPage > totalPages) currentPage = totalPages;
            socket.emit('requestProducts');
        }

        function updateItemsPerPage() {
            const selectedValue = document.getElementById('itemsPerPageDropdown').value;
            itemsPerPage = parseInt(selectedValue, 10);
            currentPage = 1;
            socket.emit('requestProducts');
        }

        socket.emit('requestProducts');
    </script>
</head>
<body>
    <h2 class="section make-it-left make-it-white-back make-it-dark make-it-rounded-top make-it-normal">
        Product List - Real-time Display
    </h2>

    <div class="section">
        <div id="productList"></div>

        <br />

        <div class="field is-inline-block">
            <div class="control">
                <div class="select is-small">
                    <select id="itemsPerPageDropdown">
                        <option value="10" selected>10 products per page</option>
                        <option value="20">20 products per page</option>
                        <option value="30">30 products per page</option>
                    </select>
                </div>
            </div>
            <div class="control">
                <button class="button is-small" onclick="updateItemsPerPage()">Apply</button>
            </div>
        </div>

        <br /><br />

        <div class="rt-general-page-footer make-it-semi-back is-centered grid-container-3c-by-1r-special">
            <button class="button section make-it-small" onclick="changePage(-1)">Prev</button>
            <div id="productCount" class="make-it-dark small-section make-it-small make-it-center"></div>
            <button class="button section make-it-small" onclick="changePage(1)">Next</button>
        </div>
    </div>
</body>
</html>
