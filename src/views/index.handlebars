<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <meta name="color-scheme" content="dark">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css">
</head>
<body>
    <h2 class="section make-it-left make-it-white-back make-it-dark make-it-rounded-top">Proyecto de Programación Backend I</h2>

    <!-- Main Content Section -->
    <section class="section make-it-normal">
        <div class="container">
            <div class="make-it-rounded make-it-semi-back make-it-normal make-it-center">
                <p class="card-title-container make-it-white make-it-dark-back">De qué se trata este proyecto</p>
                <br>
                <p class="section">
                    El proyecto consiste en un backend para una tienda de modelos de trenes llamada 'Shopnhour'. 
                    Integra una base de datos (Mongo) sobre Node y Express para montar un servicio de backend que 
                    provee un catálogo de productos y la gestión de carritos de compras. El catálogo de productos 
                    es almacenado en Mongo en la colección 'products' y los carritos en la colección 'carts'.
                </p>
                <br>
            </div>

            <div class="columns is-multiline section">
                <div class="column is-12 make-it-white make-it-small">
                    <p>Alumno: Ernesto AC</p>
                    <p>Proyecto de Programación Backend I: Desarrollo Avanzado de Backend, comisión 70470</p>
                </div>
                <br>

                <div class="column is-6 make-it-white">
                    <p class="card-title-container make-it-dark make-it-rounded-top make-it-semi-back">Navegación</p>
                    <div class="section">
                        <p class="make-it-small">
                            El proyecto comienza con esta página y provee una barra de navegación para moverse 
                            por algunas de las operaciones básicas: Lista de productos y el carrito predeterminado 
                            hardcodeado (ver 'Consideraciones' más abajo).
                        </p>
                        <br>
                        <p>Consideraciones:</p>
                        <li class="make-it-small"> 
                            El proyecto no implementa sesiones ni autenticación aún, por tanto el carrito al que agregamos productos desde este front end está hardcodeado en 
                            <b>5ab6e82f-b289-4dff-8ff5-25dc0f749ee2</b> (carrito preexistente en Mongo).
                        </li>
                        <li class="make-it-small"> 
                            El botón <div class="button is-small is-warning make-it-small">Add to Cart</div> en la vista de 
                            <a class="make-it-semi" href="/products">/products </a> está hardcodeado para agregar productos al carrito mencionado arriba.
                        </li>
                        <li class="make-it-small"> 
                            En la sección <a class="make-it-semi" href="/more">/more </a> hay vistas extra no incluidas en la barra de navegación, principalmente para testing.
                        </li>
                    </div>
                </div>

                <div class="column is-6 make-it-white">
                    <p class="card-title-container make-it-dark make-it-rounded-top make-it-semi-back">Rutas</p>
                    <div class="make-it-small columns make-it-white">
                        <div class="column is-6 section make-it-rounded">
                            <p class="make-it-normal">API endpoints</p>
                            <p><b>GET /api/products/ - </b> Trae todos los datos de la colección 'products' en Mongo en modo paginado.</p>
                            <p><b>GET /api/products/pid - </b> Trae un producto por su ID único, pid.</p>
                            <p><b>POST /api/products/ - </b> Crea un producto usando los parámetros pasados en el body del request con un ID único.</p>
                            <p><b>PUT /api/products/pid - </b> Modifica un registro existente por ID único.</p>
                            <p><b>DELETE /api/products/pid - </b> Marca como eliminado o elimina un registro. Usa el parámetro booleano en body <b>killFlag</b> para cambiar el comportamiento.</p>
                            <p><b>GET /api/carts/ - </b> Devuelve todos los carritos disponibles con la información de cada producto.</p>
                            <p><b>POST /api/carts/ - </b> Crea un nuevo carrito con un ID único y retorna su ID.</p>
                            <p><b>GET /api/carts/cid - </b> Lista los contenidos del carrito por ID (cid) con información agregada de los productos en este.</p>
                            <p><b>POST /api/carts/cid/product/pid - </b> Agrega el producto con el pid pasado o incrementa su cantidad en el carrito con el cid pasado.</p>
                            <p><b>DELETE /api/carts/cid/product/pid - </b> Elimina el producto con el pid pasado del carrito pasado por pid.</p>
                            <p><b>DELETE /api/carts/cid - </b> Elimina todos los contenidos del carrito por cid.</p>
                            <p><b>/api/</b> - Esta página.</p>
                        </div>
                        
                        <div class="column is-6 section">
                            <p class="make-it-normal">Vistas</p>
                            <p><b>/</b> - Esta página.</p>
                            <p><b>/products</b> - Catálogo de productos completo.</p>
                            <p><b>/carts</b> - Vista estática de todos los carritos en el servidor.</p>
                            <p><b>/carts/cid</b> - Vista del carrito por ID.</p>
                            <p><b>/realtime/products</b> - Vista en tiempo real de la colección de objetos en 'products'.</p>
                            <p><b>/realtime/carts</b> - Vista en tiempo real de la colección de objetos en 'carts' sin detalle por producto (solo PID y cantidad).</p>
                            <p><b>/forms/add-product</b> - Formulario para testear la habilidad de agregar un producto a la base de datos.</p>
                            <p><b>/forms/delete-product</b> - Formulario para testear la habilidad de eliminar un producto de la base de datos.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</body>
</html>
